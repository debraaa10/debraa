var SocialButtons = function(form, regUrl, disableRedirect) {
    var _ = this;

    SocialButtons.prototype.regUrl = regUrl;
    SocialButtons.prototype.disableRedirect = disableRedirect;

    _.cookie = SocialButtons.prototype.cookie = new Cookie();
    _.form = form;
    _.validator = new Validator();
    _.classList = new ClassList();
    _.getParams = _.parseSearch(location.search);

    if (_.form) {
        _.bindForm();
        _.initButtons();
        _.checkIe();
    }
    _.initLanguageButtons();
};

SocialButtons.prototype.checkIe = function() {
    if (navigator.appVersion.indexOf('MSIE') != -1 && App.Utils.BrowserVersion() <= 9) {
        this.loadScript([
            'https://cdnjs.cloudflare.com/ajax/libs/placeholders/4.0.1/placeholders.min.js' // :)
        ]);
    }
};

SocialButtons.prototype.getUrlParam = function(url, name) {
    var name = name.replace(/[[]/, '\[').replace(/[]]/, '\]');
    var regexS = '[\?#&]' + name + '=([^&#]*)';
    var regex = new RegExp(regexS);
    var results = regex.exec(url);
    if (results == null) {
        return '';
    } else {
        return results[1];
    }
};

SocialButtons.prototype.parseSearch = function(str) {
    var b = {}, str = str.substr(1).split('&');

    for (var i = 0; i < str.length; ++i) {
        var p = str[i].split('=', 2);
        if (p.length === 1) {
            continue;
        } else {
            b[p[0]] = decodeURIComponent(p[1].replace(/\+/g, ' '));
        }
    }
    return b;
};

SocialButtons.prototype.bindForm = function() {
    var _ = this, inputs;
    if (_.form) {
        _.form.onsubmit = _.submitRegForm.bind(_);
        inputs = _.form.querySelectorAll('input, select');
        for (var i = 0; i < inputs.length; i++) {
            inputs[i].onfocus = _.formInputFocus;
            inputs[i].onchange = _.formInputFocus;
        }
    }
};

SocialButtons.prototype.formInputFocus = function(e) {
    var target = e.target || e.srcElement,
        parent = target.parentNode,
        name = target.name || '',
        error = parent.querySelector('.land-form-error') || document.querySelector('.' + name  + '-error.land-form-error'),
        socialErorr = document.querySelector('.social-error'),
        globError = document.querySelector('.land-form-error.global');

    target.className = target.className.replace('error', '');
    if (error) {
        error.style.display = 'none';
    }

    if (socialErorr) {
        socialErorr.style.display = 'none';
    }

    if (globError) {
        globError.style.display = 'none';
    }
};

SocialButtons.prototype.submitRegForm = function(ev) {
    ev.preventDefault();
    ev.stopPropagation();

    var _ = this;
    var button = _.form.querySelector('.land-btn-submit');

    if (!_.validator.validateForm(_.form)) {return;}

    var overrideAction = _.form.getAttribute('action');

    var data = _.serialize(_.form);
    if (!data || button.className.search('disable') >= 0) {return;}

    button.className += ' disable';
    _.ajax({
        url: overrideAction || location.pathname,
        type: 'POST',
        data: data,
        callback: _.formSendSuccess.bind(_)
    });
};

SocialButtons.prototype.formSendSuccess = function(r) {
    var _ = this;
    var button = _.form.querySelector('.land-btn-submit');

    if (r.error) {
        _.showError(r.error, r.field);
        button.className = button.className.replace('disable', '');
    } else if (r.redirect) {
        if (_.disableRedirect) {
            if (window.callback) {
                window.callback();
            }
            return;
        }
        window.location.href = r.redirect;
    } else {
        button.className = button.className.replace('disable', '');
    }
};

SocialButtons.prototype.showError = function(text, field) {
    var globError, error
    if (!field) {
        globError = document.querySelector('.land-form-error.global');

        if (!globError) {return;}
        globError.innerHTML = text;
        globError.style.display = 'block';
    } else {
        error = document.querySelector('[data-error="' + field + '"]');

        if (!error) {return;}
        error.style.display = 'block';
    }
};

SocialButtons.prototype.initButtons = function() {
    var _ = this, keys, buttons, type, a, dividers, forms, rulles, withForm;

    keys = Object.keys(_.getParams);
    buttons = document.querySelectorAll('.land-social li');
    dividers = document.querySelectorAll('.text-divider');
    forms = document.querySelectorAll('[name="reg-form"]');
    rulles = document.querySelector('.js-without-form');
    withForm = document.querySelector('.with-form');

    if (!hasSocial() && keys.indexOf('fr') === -1) {
        [].forEach.call(buttons, function(item) {
            item.style.display = 'inline-block';
            a = item.querySelector('a');
            type = a.getAttribute('data-social');
            _.execute(type);
        });
    } else if (!hasSocial() && _.getParams.hasOwnProperty('fr')) {
        _.hideAll(dividers);
        _.hideAll(buttons);
        if (rulles) {
            rulles.style.display = 'none';
        }

    } else {
        if (!_.getParams.hasOwnProperty('fr')) {
            _.hideAll(forms);
            if (rulles) {
                rulles.style.display = 'block';
            }
            if (withForm) {
                withForm.style.display = 'none';
            }
        }

        [].forEach.call(buttons, function(item) {
            a = item.querySelector('a');
            type = a.getAttribute('data-social');

            if (_.getParams.hasOwnProperty(type)) {
                item.style.display = 'inline-block';
                _.execute(type);
            } else {
                item.style.display = 'none';
            }
        });
    }

    function hasSocial() {
        return keys.indexOf('vk') !== -1 ||
               keys.indexOf('fb') !== -1 ||
               keys.indexOf('mm') !== -1 ||
               keys.indexOf('gm') !== -1 ||
               keys.indexOf('yh') !== -1 ||
               keys.indexOf('ht') !== -1;
    }
};

SocialButtons.prototype.hideAll = function(items) {
    if (!items) {return;}

    [].forEach.call(items, function(item) {
        item.style.display = 'none';
    });
};

SocialButtons.prototype.initLanguageButtons = function() {
    var lngSelector = document.querySelector('[name=language]'), change,
        _ = this, lng;

    change = function() {
        lng = lngSelector.value;

        if (lng) {
            _.ajax({
                type: 'POST',
                url: '/profile/language',
                data: {
                    language: lng
                },
                callback: function() {
                    document.location.reload();
                }
            });
        }
    };

    if (!lngSelector) {return;}
    lngSelector.addEventListener('change', change, false);
};

SocialButtons.prototype.execute = function(type) {
    var _ = this;

    if (!window.dataLanding) {return;}
    var data = window.dataLanding.social ||  window.dataLanding;
    data = data[type];

    if (_.social.hasOwnProperty(type) && !_.social[type].init) {
        _.social[type].init = true;
        new _.social[type]().init(data);
    }
};

SocialButtons.prototype.loadScript = function(links, callback) {
    if (!Array.isArray(links)) {return;}
    var fn = callback || function() {},
        _ = this, scriptsLoaded = 0;
    _.urls = _.urls || [];

    var i = links.length,
        d = document,
        f = d.createDocumentFragment(),
        s = d.createElement('script'),
        z, h,
    load = function(e) {
        scriptsLoaded++;
        if (scriptsLoaded === links.length) {
            fn();
        }
    };

    while (i--) {
        if (_.urls.indexOf(links[i]) >= 0) {
            load();
        } else {
            z = s.cloneNode(false);
            z.onload = load;
            z.async = z.src = links[i];
            f.appendChild(z);
            _.urls.push(links[i]);
        }
    }

    h = d.getElementsByTagName('head')[0];
    h.appendChild(f);
};

SocialButtons.prototype.oauth = function(data) {
    var _ = this, regData = {
        url: _.regUrl || location.pathname,
        type: 'POST',
        data: data,
        callback: _.oauthHandler.bind(_)
    };
    if (_.delaySocialProvider) {return;}
    _.delaySocialProvider = true;
    _.ajax(regData);
};

SocialButtons.prototype.oauthHandler = function(res) {
    var _ = this;

    if (!res) {return;}

    if (res.error) {
        _.showOauthError(res.error);
    } else if (res.redirect) {
        if (_.disableRedirect) {
            if (window.callback) {
                window.callback();
            }
            return;
        }
        window.location.href = res.redirect;
    }
};

SocialButtons.prototype.showOauthError = function(text) {
    var error = document.querySelector('.social-error');
    var errorEmail = document.querySelector('.error_email');

    if (!error && location.href.indexOf('landing') >= 0) {
        var div = document.createElement('div');
        var buttons = document.querySelector('.land-social');

        div.className = 'social-error';
        div.style.display = 'block';
        div.innerHTML = text;
        buttons.parentNode.insertBefore(div, buttons.nextSibling);

        return;
    }

    if (error) {
        error.style.display = 'block';
        error.innerHTML = text;
    } else if (errorEmail) {
        errorEmail.style.display = 'block';
        errorEmail.innerHTML = text;
    }

};

SocialButtons.prototype.ajax = function(params) {
    var xhr = new XMLHttpRequest(), _ = this;
    var redirect;
    xhr.open(params.type, params.url);

    params.callback = params.callback || function() {};

    xhr.onreadystatechange = function() {
        _.delaySocialProvider = false;
        if (xhr.readyState === 4) {
            if (xhr.status === 200 || (xhr.status === 0 && xhr.responseText.length)) {
                if (xhr.responseText) {
                    params.callback(JSON.parse(xhr.responseText));
                } else if (xhr.getResponseHeader('x-redirect')) {
                    redirect = xhr.getResponseHeader('x-redirect');
                    window.location.href = redirect;
                }
            }
        }
    };

    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');
    xhr.setRequestHeader('async-page', '1');

    if (params.type === 'POST') {
        xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded; charset=UTF-8');
        if (typeof params.data === 'string') {
            xhr.send(params.data);
        } else {
            xhr.send(_.objectToFormData(params.data));
        }

    } else {
        xhr.send(null);
    }

};

SocialButtons.prototype.jsonp = function(params) {
    var script = document.createElement('script');
    var callbackName = 'callbackName'

    params.url = params.url.indexOf('?') > 0 ? params.url += '&' : params.url += '?';
    script.src = params.url + 'callback=' + callbackName;

    window[callbackName] = params.callback || function() {};

    document.getElementsByTagName('head')[0].appendChild(script);
};

SocialButtons.prototype.objectToFormData = function(data) {
    var query = [];
    for (var key in data) {
        if (data[key] !== null && data[key] !== undefined) {
            if (Array.isArray(data[key])) {
                var array = data[key];
                array.forEach(function(item) {
                    query.push(encodeURIComponent(key) + '[]'  + '=' + encodeURIComponent(item));
                });
            } else {
                query.push(encodeURIComponent(key) + '=' + encodeURIComponent(data[key]));
            }
        }
    }

    return query.join('&');
};

SocialButtons.prototype.serialize = function(form) {
    var element;
    if (!form || form.nodeName !== 'FORM') {
        return;
    }

    var i, q = [];
    for (i = form.elements.length - 1; i >= 0; i = i - 1) {
        element = form.elements[i];
        if (form.elements[i].name === '') {
            continue;
        }

        q.push(form.elements[i].name + '=' + encodeURIComponent(form.elements[i].value));
    }

    return q.join('&');
};

SocialButtons.prototype.social = {
    vk: function() {
        var vkData = {},
            script = '//vk.com/js/api/openapi.js',
            vk = this,
            _ = SocialButtons.prototype, buttons;

        var innerInit = function() {
            VK.init({
                apiId: vkData.id
            });

            vk.checkLogin();
            buttons = document.querySelectorAll('[data-social="vk"]');
            [].forEach.call(buttons, function(button) {
                button.addEventListener('click', vk.auth, false);
            });
        };

        this.checkLogin = function() {
            if (_.cookie.get('no_auto_login')) {return;}

            VK.Auth.getLoginStatus(function(response) {
                if (response && response.session && response.status === 'connected') {
                    App.track('Login','Autologin','VK',1);
                    document.location.href = App.Utils.Url.addParam(document.location.href, 'vk_force_login', 1);
                }
            });
        };

        this.init = function(data) {
            vkData = data;
            window.vkAsyncInit = innerInit;
            _.loadScript([script]);
        };

        this.auth = function(e) {
            e.preventDefault();

            var OAUTHURL = 'https://oauth.vk.com/authorize?';
            var REDIRECT = window.location.protocol + '//' + window.location.hostname + (window.location.port ? ':' + window.location.port : '');
            var _url = OAUTHURL +
                'client_id=' + vkData.id +
                '&scope=email?display=popup&redirect_uri=' + REDIRECT +
                '&response_type=code&v=5.62';
            var win = window.open(_url, 'vk_window', 'width=800, height=600');

            var pollTimer = setInterval(function() {
                try {
                    if (win.document.URL.indexOf(REDIRECT) != -1) {
                        clearInterval(pollTimer);
                        var url = win.document.URL;
                        var code = _.getUrlParam(url, 'code');
                        win.close();
                        document.location.href = '/sign/vk?code=' + code;
                    }
                } catch (e) {}
            }, 100);

        };

        this.login = function() {
            VK.Auth.login(vk.authInfo, 4194304);
        };
        this.authInfo = function(res) {
            if (res && res.session) {
                vk.getInfo({
                    user: res.session.user,
                    res: res
                });
            }
        };
        this.getInfo = function(data) {
            var fields = {
                uids: data.user.id,
                fields: 'uid, first_name, photo_big, sex, bdate, email',
                scope: 'email'
            };

            VK.Api.call('users.get', fields, function(res) {
                if (res && res.response) {
                    var user = res.response[0],
                            data = {
                                email: user.email ? user.email : user.uid + '@vkontakte.ru',
                                name: user.first_name,
                                photo_url: user.photo_big,
                                gender: user.sex === 2 ? 'm' : 'f',
                                birthday: user.bdate || '',
                                vk: true,
                                vk_id: user.uid,
                                channel: 'VK_application'
                            };
                    _.oauth(data);
                }
            });
        };

        return this;
    },

    fb: function() {

        var fbData = {};
        var script = '//connect.facebook.net/' + (window.dataLanding.locale || 'en_EN') + '/sdk.js';
        var fb = this;
        var _ = SocialButtons.prototype, buttons;

        var innerInit = function() {
            if (fbData.initialized) { return; }
            FB.init({
                appId: fbData.id,
                xfbml: true,
                version: 'v2.2',
                status: true,
                cookie: true
            });

            buttons = document.querySelectorAll('[data-social="fb"], [data-social="facebook"]');
            [].forEach.call(buttons, function(button) {
                button.addEventListener('click', fb.login, false);
            });
            fbData.initialized = true;
            fb.checkLogin();
        };

        this.init = function(data) {
            fbData = data;

            window.fbAsyncInit = innerInit;
            setTimeout(function() {
                _.loadScript([script]);
            }, 0);
        };

        this.checkLogin = function() {
            var accessToken;
            if (_.cookie.get('no_auto_login')) {return;}

            FB.getLoginStatus(function(response) {
                if (response.status === 'connected') {
                    accessToken = response.authResponse.accessToken;
                    if (-1 === window.location.search.indexOf('fb_force_login')) {
                        App.track('Login','Autologin','FB',1);
                        document.location.href = App.Utils.Url.addParam(document.location.href, 'fb_force_login', 1);
                    }
                }
            });
        };

        this.login = function(e) {
            e.preventDefault();
            FB.login(fb.authInfo, {scope: 'public_profile,email,user_birthday'});
        };

        this.authInfo = function(res) {
            if (res.status === 'connected' && res.authResponse) {
                fb.getInfo({
                    token: res.authResponse.accessToken
                });
            }
        };

        this.getInfo = function(res) {
            FB.api('/me', 'get', {fields: 'email,id,first_name,gender,birthday'}, function(user) {
                var data = {
                    email: user.email,
                    name: user.first_name,
                    photo_url: 'http://graph.facebook.com/v2.2/' + user.id + '/picture?width=800',
                    gender: user.gender === 'male' ? 'm' : 'f',
                    birthday: user.birthday,
                    fb: true,
                    fb_id: user.id,
                    token: res.token,
                    channel: 'FB_application',
                    not_agree_terms: false,
                    reg_source: 'fb'
                };
                _.oauth(data);
            });
        };

        this.prepareBirthday = function(str) {
            if (!str) {return null;}
            var newDateObject = new Date();
            var newObjectCurrentYear = +newDateObject.getFullYear();

            var userDateObjectPieces = str.split('/');
            var userObjectYear = +userDateObjectPieces[2];

            if (newObjectCurrentYear > userObjectYear) {
                return newObjectCurrentYear - userObjectYear;
            } else {
                return null;
            }
        };
    },

    mm: function() {

        var mmData = {};
        var script = '//connect.mail.ru/js/loader.js';
        var mm = this;
        var _ = SocialButtons.prototype, buttons;

        var innerInit = function() {
            mailru.loader.require('api', function() {
                mailru.connect.init(mmData.id, mmData.key);
                mm.checkLogin();
                mailru.events.listen(mailru.connect.events.login, mm.authInfo);
            });

            buttons = document.querySelectorAll('[data-social="mm"], [data-social="mailru"]');
            [].forEach.call(buttons, function(button) {
                button.addEventListener('click', mm.login, false);
            });
        };

        this.checkLogin = function() {
            if (_.cookie.get('no_auto_login')) {return;}

            mailru.connect.getLoginStatus(function(session) {
                if (session && (+session.isAppUser === 1 || +session.is_app_user === 1)) {
                    App.track('Login','Autologin','MM',1);
                    document.location.href = App.Utils.Url.addParam(document.location.href, 'mm_force_login', 1);
                }
            });
        };

        this.init = function(data) {
            mmData = data;
            setTimeout(function() {
                _.loadScript([script], innerInit);
            }, 0);

        };
        this.login = function() {
            mailru.connect.login(['widget']);
        };
        this.authInfo = function(res) {
            if (res && res.is_app_user === '1') {
                mm.getInfo();
            }
        };
        this.getInfo = function() {
            mailru.common.users.getInfo(function(res) {
                if (!res || !res[0]) {
                    return;
                }
                var user = res[0],
                    data = {
                        email: user.email,
                        name: user.first_name,
                        photo_url: user.has_pic ? user.pic_big : undefined,
                        gender: user.sex === 0 ? 'm' : 'f',
                        birthday: user.birthday,
                        mm: true,
                        mm_id: user.uid,
                        channel: 'MM_application',
                        reg_source: 'mm'
                    };

                _.oauth(data);
            });
        };

        return this;
    },

    ok: function() {

        var odData = {};
        var script = 'http://www.odnoklassniki.ru/oauth/authorize?';
        var ok = this;

        this.init = function(data) {
            odData = data;
            if (odData.enabled && odData.options) {
                odData.button = (typeof odData.button === 'object' ? odData.button : $(odData.button));
                odData.button.on('click', ok.login);
            }
        };
        this.login = function() {
            var urlWin = script + '&client_id=' + odData.options.id +
                    '&redirect_uri=' + odData.options.r_uri +
                    '/&response_type=code';
            var win = window.open(urlWin, 'od_window', 'width=800, height=600');

            var pollTimer = window.setInterval(function() {
                try {
                    if (win.document.URL.indexOf(REDIRECT) != -1) {
                        window.clearInterval(pollTimer);
                        var url = win.document.URL;
                        var code = getUrlParam(url, 'code');

                        win.close();

                        document.location.href = '/sign/odnkl?code=' + code;
                    }
                } catch (e) {
                }
            }, 100);
        };

        return this;

    },

    gm: function() {

        var gmData = {};
        var script = '//apis.google.com/js/client:plusone.js?onload=googleApi';
        var gm = this;
        var _ = SocialButtons.prototype, buttons;

        var innerInit = function() {
            gapi.client.setApiKey(gmData.apiKey);

            buttons = document.querySelectorAll('[data-social="gm"]');
            [].forEach.call(buttons, function(button) {
                button.addEventListener('click', gm.auth, false);
            });
        };

        this.auth = function(e) {
            e.preventDefault();

            var OAUTHURL = 'https://accounts.google.com/o/oauth2/auth?';
            var SCOPE = 'https://www.googleapis.com/auth/userinfo.profile+email https://www.google.com/m8/feeds';
            var CLIENTID = gmData.id;
            var REDIRECT = window.location.protocol + '//' + window.location.hostname + (window.location.port ? ':' + window.location.port : '');
            var TYPE = 'token';
            var _url = OAUTHURL + 'scope=' + SCOPE + '&client_id=' + CLIENTID + '&redirect_uri=' + REDIRECT + '&response_type=' + TYPE;

            var win = window.open(_url, 'gm_window', 'width=800, height=600');

            var pollTimer = setInterval(function() {
                try {
                    if (win.document.URL.indexOf(REDIRECT) != -1) {
                        clearInterval(pollTimer);
                        var url = win.document.URL;
                        var acToken = _.getUrlParam(url, 'access_token');
                        win.close();
                        gm.validateToken(acToken);
                    }
                } catch (e) {}
            }, 100);

        };

        this.validateToken = function(token, cb) {
            var VALIDURL = 'https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=';
            _.jsonp({
                url: VALIDURL + token,
                data: null,
                callback: function(responseText) {
                    if (cb && typeof cb === 'function') {
                        cb(responseText);
                    } else {
                        gm.getUserInfo(token);
                    }
                },
                type: 'jsonp'
            });
        };

        this.getUserInfo = function(acToken) {
            _.jsonp({
                url: 'https://www.googleapis.com/oauth2/v2/userinfo?access_token=' + acToken,
                data: null,
                callback: function(resp) {
                    console.log(resp);
                    resp.google = true;
                    resp.birthday = null;
                    resp.not_agree_terms = false;
                    resp.photo_url = 'https://www.googleapis.com/plus/v1/people/me?access_token=' + acToken;
                        //gm.fillPhoto(acToken, resp);
                    _.oauth(resp);
                },
                type: 'jsonp'
            });
        };
/*
        this.fillPhoto = function(acToken,resp) {
            _.jsonp({
                url: 'https://www.googleapis.com/plus/v1/people/me?access_token=' + acToken,
                data: null,
                callback: function (accInfo) {
                    if (!accInfo.image.isDefault) {
                        resp.photo_url = accInfo.image.url.replace('sz=50', 'sz=800');
                    }
                    _.oauth(resp);
                },
                type: 'jsonp'
            });
        };*/

        this.init = function(data) {
            gmData = data;
            window.googleApi = innerInit;
            _.loadScript([script]);
        };
        this.authInfo = function(authResult) {
            if (authResult && !authResult.error) {
                gm.getInfo();
            }
        };
        this.login = function() {
            var clientId = gmData.id;
            var scopes = 'https://www.googleapis.com/auth/plus.me profile email';

            gapi.auth.authorize({
                client_id: clientId,
                scope: scopes,
                immediate: false
            }, gm.authInfo);
        };
        this.getInfo = function() {
            gapi.client.load('plus', 'v1').then(function() {
                var request = gapi.client.plus.people.get({
                    'userId': 'me'
                });
                request.then(function(res) {
                    console.log(res);
                    var r = res.result;
                    var emails = r.emails || [];
                    var data = {
                        email: emails[0].value,
                        name: r.displayName,
                        gender: r.gender === 'female' ? 'f' : 'm',
                        photo_url: gm.getPhoto(r.image),
                        birthday: r.birthday,
                        gm: true,
                        gm_id: r.id,
                        channel: 'GM_application',
                        reg_source: 'gm'
                    };
                    _.oauth(data);
                }, function(err) {
                });
            })
        };
        this.getPhoto = function(img) {
            if (!img.url) {
                return undefined;
            }
            return img.url.replace('sz=50', 'sz=800');
        };

        return this;
    },

    yh: function() {

        var yhData = {};
        var script = 'https://api.login.yahoo.com/oauth2/request_auth';
        var yh = this;
        var _ = SocialButtons.prototype, buttons;

        var innerInit = function() {
            buttons = document.querySelectorAll('[data-social="yh"]');
            [].forEach.call(buttons, function(button) {
                button.addEventListener('click', yh.login2, false);
            });
        };

        this.init = function(data) {
            yhData = data;
            innerInit();
        };

        // this.login = function () {
        //     var client_id = yhData.options.id;
        //     var redirect_uri = yhData.options.r_uri;

        //     var url = script + '?client_id=' + client_id +
        //             '&redirect_uri=' + redirect_uri +
        //             '&response_type=token&language=ru-ru';

        //     var top = (window.innerHeight - 600) / 2;
        //     var left = (window.innerWidth - 800) / 2;

        //     var win = window.open(url, "yh_window", 'width=800,height=600,top=' + top + ',left=' + left);
        //     yh.authInfo(win);
        // };

        this.login2 = function(e) {
            e.preventDefault();
            var origin = window.location.protocol + '//' + window.location.hostname + (window.location.port ? ':' + window.location.port : '');
            var url = origin + '/oauth/login?service=yahoo&params%5Bdisplay%5D=popup';

            var width = 640;
            var height = 480;
            var top = (window.innerHeight - 600) / 2;
            var left = (window.innerWidth - 800) / 2;
            var param = 'menubar=no,location=yes,resizable=yes,scrollbars=yes,status=no,width=' + width + ',height=' + height + ',top=' + top + ',left=' + left;

            window.open(url, 'yh_window2', param);

            return false;
        };
        this.authInfo = function(win) {
            window.closeYahooPopup = function(token, uid) {
                win.close();
                if (token && token.length && uid && uid.length) {
                    yh.getInfo({
                        token: token,
                        uid: uid
                    });
                }
            }
        };
        this.getInfo = function(data) {
            _.oauth({
                source: 'yahoo_oauth',
                uid: data.uid,
                token: data.token
            });
        };

        return this;
    },

    ht: function() {

        var htData = {};
        var script = '//js.live.net/v5.0/wl.js';
        var ht = this;
        var _ = SocialButtons.prototype, buttons;

        var innerInit = function() {
            buttons = document.querySelectorAll('[data-social="ht"]');
            [].forEach.call(buttons, function(button) {
                button.addEventListener('click', ht.login, false);
            });
        };

        this.init = function(data) {
            htData = data;
            _.loadScript([script], innerInit);
        };
        this.login = function(e) {
            e.preventDefault();

            WL.init({
                client_id: htData.id,
                display: 'popup',
                response_type: 'token',
                redirect_uri: location.protocol + '//' + location.host + '/redirect.html',
                // redirect_uri: htData.r_uri
            });

            WL.login({'scope': ['wl.basic', 'wl.emails', 'wl.birthday']}).then(function(res) {
                ht.getInfo(res.session);
            });
        },

        this.getInfo = function(session) {
            WL.api({path: '/me', method: 'GET'}).then(function(res) {
                if (res) {
                    var data = {
                        name: res.name ? res.name : res.first_name,
                        gender: res.gender === 'male' ? 'm' : 'f',
                        email: res.emails.personal ? res.emails.personal : res.emails.account,
                        age: ht.getAge(res),
                        photo_url: 'https://apis.live.net/v5.0/' + res.id + '/picture?access_token=' + session.access_token,
                        ht: true,
                        ht_id: res.id,
                        reg_source: 'ht',
                        channel: 'HT_application',
                        skip_captcha: 1,
                        check_rules: 1
                    };
                    _.oauth(data);
                }
            });
        };

        this.getAge = function(res) {
            var year = new Date().getFullYear();
            return (res.birth_year) ? year - res.birth_year : 18;
        };

        return this;
    },

    ya: function() {
        var yaData = {};
        var ya = this;
        var _ = SocialButtons.prototype, buttons;

        var innerInit = function() {
            buttons = document.querySelectorAll('[data-social="yandex"], [data-social="ya"]');
            [].forEach.call(buttons, function(button) {
                button.addEventListener('click', ya.login, false);
            });
        };

        this.init = function(data) {
            yaData = data;
            innerInit();
        };

        this.login = function(e) {
            e.preventDefault();
            document.location.href = 'https://oauth.yandex.ru/authorize?response_type=code&client_id=' + yaData.id
        };
    }
};

var Validator = function() {
    var _ = this;
    _.nameMinLength = 0;
    _.nameMaxLength = 21;

    _.emailRegex =  /\S+@\S+\.\S+/; //4len@4len.4len
};

Validator.prototype.validateAge = function(value) {
    var age = parseInt(value, 10);
    return !(isNaN(age) || age < 0);
};

Validator.prototype.validateName = function(value) {
    var _ = this;
    if (!value) {return false;}
    return value.length > _.nameMinLength && value.length < _.nameMaxLength;
};

Validator.prototype.validateEmail = function(value) {
    var _ = this;
    if (!value) {return false;}
    return _.emailRegex.test(value);
};

Validator.prototype.validatePassword = function(value) {
    var _ = this;
    if (!value) {return false;}
    return value.length > 5
};

Validator.prototype.validateGender = function(value) {
    if (!value) {return false;}
    return !(value !== 'f' && value !== 'm');
};

Validator.prototype.validateForm = function(form) {
    var _ = this;
    var placeholder;
    placeholder = form.name.getAttribute('placeholder');

    if (!_.validateName(form.name.value) || form.name.value === placeholder) {
        form.querySelector('.name-error').style.display = 'block';
        return false;
    }

    placeholder = form.email.getAttribute('placeholder');
    if (!_.validateEmail(form.email.value) || form.email.value === placeholder) {
        form.querySelector('.email-error').style.display = 'block';
        return false;
    }

    // placeholder = form.password.getAttribute("placeholder");
    // if (!_.validatePassword(form.password.value) || form.password.value === placeholder) {
    //     form.querySelector(".password-error").style.display = "block";
    //     return false;
    // }

    if (!_.validateGender(form.gender.value)) {
        form.querySelector('.gender-error').style.display = 'block';
        return false;
    }

    if (!_.validateAge(form.age.value)) {
        form.querySelector('.age-error').style.display = 'block';
        return false;
    }

    return true;
};

var ClassList = function() {};

ClassList.prototype.addClass = function(o, c) {
    var re = new RegExp('(^|\\s)' + c + '(\\s|$)', 'g');
    if (re.test(o.className)) {
        return;
    }
    o.className = (o.className + ' ' + c).replace(/\s+/g, ' ').replace(/(^ | $)/g, '');
};

ClassList.prototype.removeClass = function(o, c) {
    var re = new RegExp('(^|\\s)' + c + '(\\s|$)', 'g');
    o.className = o.className.replace(re, '$1').replace(/\s+/g, ' ').replace(/(^ | $)/g, '');
};

var Cookie = function() {};

Cookie.prototype.get = function(name) {
    var pattern = RegExp(name + '=.[^;]*');
    var matched = document.cookie.match(pattern);
    if (matched) {
        var cookie = matched[0].split('=');
        return cookie[1];
    }
    return false;
};

var App = {
    track: function(cat, action, label, value, cb) {
        if (typeof action != 'undefined') {
            action = action.toString();
        }
        if (typeof label != 'undefined') {
            label = label.toString();
        }

        //if universal analytics enabled
        if (typeof ga === 'function') {
            var params = {
                'hitType': 'event',
                'eventCategory': cat,
                'eventAction': action
            }

            if (label) {
                params.eventLabel = label;
                params.eventValue = value;
            }

            ga('send', params);
        } else {
            if (typeof(_gaq) == 'undefined') {
                _gaq = [];
            }

            var params = ['_trackEvent', cat, action];
            if (label) {
                params.push(label);
                params.push(value);
            }

            _gaq.push(params);

            if (typeof cb != 'undefined') {
                _gaq.push(cb);
            }
        }

        return true;
    },
};

App.Utils = {};
App.Utils.Url = {
    addParam: function(url, param, value) {
        var a = document.createElement('a');
        a.href = url;
        a.search += a.search.substring(0, 1) === '?' ? '&' : '?';
        a.search += encodeURIComponent(param);
        if (value)
            a.search += '=' + encodeURIComponent(value);
        return a.href;
    }
};

App.Utils.BrowserVersion = function() {
    var ua = navigator.userAgent, tem,
    M = ua.match(/(opera|chrome|safari|firefox|msie|trident(?=\/))\/?\s*(\d+)/i) || [];
    if (/trident/i.test(M[1])) {
        tem = /\brv[ :]+(\d+)/g.exec(ua) || [];
        return (tem[1] || '');
    }
    if (M[1] === 'Chrome') {
        tem = ua.match(/\b(OPR|Edge)\/(\d+)/);
        if (tem != null) {
            return tem.slice(2)[0];
        }

        tem = ua.match(/\b(YaBrowser)\/(\d+)/);
        if (tem != null) {
            return tem.slice(2)[0];
        }
    }
    M = M[2] ? [M[1], M[2]] : [navigator.appName, navigator.appVersion, '-?'];
    if ((tem = ua.match(/version\/(\d+)/i)) != null) {
        M.splice(1, 1, tem[1]);
    }
    return M[1];
};
